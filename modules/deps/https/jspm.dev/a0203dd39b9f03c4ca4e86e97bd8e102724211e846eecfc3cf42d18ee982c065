import _jsSha from '/npm:js-sha3@0.5!cjs';
import _idnaUts46Hx from '/npm:idna-uts46-hx@2!cjs';
import _buffer from '/npm:@jspm/core@2/nodelibs/buffer';

var name;

var _global = typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : global;

var exports = {};
var Buffer = _buffer.Buffer;
var sha3 = _jsSha.keccak_256;
var uts46 = _idnaUts46Hx;

function namehash(inputName) {
  // Reject empty names:
  var node = "";

  for (var i = 0; i < 32; i++) {
    node += "00";
  }

  _global.name = name = normalize(inputName);

  if (name) {
    var labels = name.split(".");

    for (var i = labels.length - 1; i >= 0; i--) {
      var labelSha = sha3(labels[i]);
      node = sha3(new Buffer(node + labelSha, "hex"));
    }
  }

  return "0x" + node;
}

function normalize(name) {
  return name ? uts46.toUnicode(name, {
    useStd3ASCII: true,
    transitional: false
  }) : name;
}

exports.hash = namehash;
exports.normalize = normalize;
const hash = exports.hash;
const _normalize = exports.normalize;

export default exports;
export { hash, _normalize as normalize };

//# sourceMappingURL=npm:eth-ens-namehash@2.0.8!cjs.map