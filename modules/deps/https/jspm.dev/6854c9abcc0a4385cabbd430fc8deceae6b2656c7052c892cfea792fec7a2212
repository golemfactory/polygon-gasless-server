import '/npm:minimalistic-assert@1!cjs';
import '/npm:inherits@2!cjs';
import { e as exports$1 } from '../../../_/d70f5bf3.js';
import '../../../_/1e588aae.js';
import _3 from './256!cjs';

var exports = {};
var utils = exports$1;
var SHA256 = _3;

function SHA224() {
  if (!(this instanceof SHA224)) return new SHA224();
  SHA256.call(this);
  this.h = [3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428];
}

utils.inherits(SHA224, SHA256);
exports = SHA224;
SHA224.blockSize = 512;
SHA224.outSize = 224;
SHA224.hmacStrength = 192;
SHA224.padLength = 64;

SHA224.prototype._digest = function digest(enc) {
  // Just truncate output
  if (enc === "hex") return utils.toHex32(this.h.slice(0, 7), "big");else return utils.split32(this.h.slice(0, 7), "big");
};

var _2 = exports;

export default _2;

//# sourceMappingURL=224!cjs.map